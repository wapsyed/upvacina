{"frames":[{"func":"municipios %>% left_join(populacao_municipios_2000_2022, by = join_by(\"codigo_municipio\", \n    ano))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"left_join(., populacao_municipios_2000_2022, by = join_by(\"codigo_municipio\", \n    ano))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"left_join.data.frame(., populacao_municipios_2000_2022, by = join_by(\"codigo_municipio\", \n    ano))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"join_mutate(x = x, y = y, by = by, type = \"left\", suffix = suffix, \n    na_matches = na_matches, keep = keep, multiple = multiple, \n    unmatched = unmatched, relationship = relationship, user_env = caller_env())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"join_cast_common(x_key, y_key, vars, error_call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try_fetch(vec_ptype2(x, y, x_arg = \"\", y_arg = \"\", call = error_call), \n    vctrs_error_incompatible_type = function(cnd) {\n        rethrow_error_join_incompatible_type(cnd, vars, error_call)\n    })","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, condition = function(cnd) {\n    {\n        .__handler_frame__. <- TRUE\n        .__setup_frame__. <- frame ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_ptype2(x, y, x_arg = \"\", y_arg = \"\", call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function () \nvec_default_ptype2(x = x, y = y, x_arg = x_arg, y_arg = y_arg, \n    call = call, `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`))()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_default_ptype2(x = x, y = y, x_arg = x_arg, y_arg = y_arg, \n    call = call, `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withRestarts(stop_incompatible_type(x, y, x_arg = x_arg, y_arg = y_arg, \n    `vctrs:::from_dispatch` = match_from_dispatch(...), call = call), \n    vctrs_restart_ptype2 = function(ptype) {\n        ptype ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withOneRestart(expr, restarts[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doWithOneRestart(return(expr), restart)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible_type(x, y, x_arg = x_arg, y_arg = y_arg, `vctrs:::from_dispatch` = match_from_dispatch(...), \n    call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible(x, y, x_arg = x_arg, y_arg = y_arg, details = details, \n    ..., message = message, class = c(class, subclass, \"vctrs_error_incompatible_type\"), \n    call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(message, class = c(class, \"vctrs_error_incompatible\"), \n    x = x, y = y, details = details, ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    {\n        .__handler_frame__. <- TRUE ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"handlers[[1L]](cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rethrow_error_join_incompatible_type(cnd, vars, error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_join(message = c(glue(\"Can't join `{x_name}` with `{y_name}` due to incompatible types.\"), \n    i = glue(\"`{x_name}` is a <{x_type}>.\"), i = glue(\"`{y_name}` is a <{y_type}>.\")), \n    class = \"dplyr_error_join_incompatible_type\", call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_dplyr(message = message, class = c(class, \"dplyr_error_join\"), \n    ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message = message, class = c(class, \"dplyr_error\"), ..., \n    call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in left_join(., populacao_municipios_2000_2022, by = join_by(\"codigo_municipio\",  : \n  \u001B[38;5;253m\n\u001B[36mℹ\u001B[38;5;253m `x$ano` is a <double>.\n\u001B[36mℹ\u001B[38;5;253m `y$ano` is a <character>.\u001B[39m\n"}