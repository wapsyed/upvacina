dtb_municipios_cod = RELATORIO_DTB_BRASIL_MUNICIPIO %>%
clean_names() %>%
select(codigo_uf = uf, uf = nome_uf, codigo = codigo_municipio_completo, nome_municipio) %>%
mutate(nome_municipio_original = nome_municipio,
nome =  toupper(nome_municipio_original),
nome = stri_trans_general(nome, "Latin-ASCII")) %>%
select(-nome_municipio)
sipni_all %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
filter(mun_uf == "Município")
sipni_all %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome")
sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome")
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome")
sipni_cobertura_municipios_1994_2023_2
sipni_cobertura_uf_1994_2023_2
sipni_cobertura_uf_1994_2023_2 = sipni_cobertura_uf_1994_2023 %>%
mutate(mun_uf = "UF",
nome = uf,
nome =  toupper(nome),
nome = stri_trans_general(nome, "Latin-ASCII"))
sipni_cobertura_uf_1994_2023_2
#Estados
sipni_cobertura_uf_1994_2023_2 = sipni_cobertura_uf_1994_2023 %>%
mutate(mun_uf = "UF",
nome = uf,
nome =  toupper(nome),
nome = stri_trans_general(nome, "Latin-ASCII"))
sipni_cobertura_uf_1994_2023_2
#Estados
sipni_cobertura_uf_1994_2023_2 = sipni_cobertura_uf_1994_2023 %>%
mutate(mun_uf = "UF",
nome = uf,
nome =  toupper(nome),
nome = stri_trans_general(nome, "Latin-ASCII")) %>%
select(nome, uf, ano, imuno, cobertura, mun_uf)
sipni_cobertura_municipios_1994_2023_2
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" ) %>%
select(!"...1":municipio, !codigo.x)
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" ) %>%
select(!"...1":municipio)
sipni_cobertura_municipios_1994_2023_2
sipni_cobertura_municipios_1994_2023_2
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome")
sipni_cobertura_municipios_1994_2023_2
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
sipni_cobertura_municipios_1994_2023_2
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome")
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" ) %>%
select(!"...1":municipio)
sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
#Salvar
write.csv(sipni_cobertura_municipios_1994_2023,
file = "sipni_cobertura_municipios_1994_2023.csv")
municipios = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" ) %>%
select(!"...1":municipio)
municipios = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
#Salvar
write.csv(municipios,
file = "sipni_cobertura_municipios_1994_2023.csv")
saveRDS(municipios, file = "sipni_cobertura_municipios_1994_2023.rds")
#Salvar
saveRDS(municipios, file = "sipni_cobertura_municipios_1994_2023.rds")
saveRDS(sipni_cobertura_uf_1994_2023_2, file = "sipni_cobertura_uf_1994_2023_2.rds")
#Salvar
saveRDS(municipios, file = "sipni_cobertura_municipios_1994_2023_2.rds")
#Salvar
saveRDS(sipni_cobertura_municipios_1994_2023,
file = "sipni_cobertura_municipios_1994_2023.rds")
saveRDS(sipni_cobertura_uf_1994_2023, file = "sipni_cobertura_uf_1994_2023.rds")
devtools::install_github("tbrugz/ribge")
devtools::install_github("tbrugz/ribge")
library(ribge)
library(ribge)
populacao_municipios()
populacao_municipios(1994:2000)
populacao_municipios(2000)
# Obter população de municipios
anos = 1994:2023
resultados = list()
for (ano in anos) {resultados[[as.character(ano)]] = populacao_municipios(ano)}
# Obter população de municipios
anos = 2000:2023
resultados = list()
for (ano in anos) {resultados[[as.character(ano)]] = populacao_municipios(ano)}
populacao_municipios(1994)
populacao_municipios(1995)
populacao_municipios(1999)
populacao_municipios(2000)
?populacao_municipios(2000)
for (ano in anos) {resultados[[as.character(ano)]] = populacao_municipios(ano)}
# Obter população de municipios
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
resultados[[as.character(ano)]] <- populacao_municipios(ano)
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}print(resultados)
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
resultados[[as.character(ano)]] <- populacao_municipios(ano)
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
resultados[[as.character(ano)]] <- populacao_municipios(ano)
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
resultados
resultado_final <- bind_rows(resultados, .id = "ano")
resultados
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- populacao_municipios(ano)
df_ano <- df_ano %>%
mutate_all(as.character)  # Convertendo todas as colunas para character
resultados[[as.character(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
# Combinar todos os dataframes em um único dataframe
resultado_final <- bind_rows(resultados, .id = "ano")
# Exibir o dataframe final
print(resultado_final)
# Exibir o dataframe final
print(resultado_final %>%
select(ano) %>%
distinct())
tabyl(resultado_final, ano)
tabyl(resultado_final, populacao_municipios())
# Combinar todos os dataframes em um único dataframe
populacao_municipios_2000_2022 <- bind_rows(resultados, .id = "ano")
print(populacao_municipios_2000_2022)
municipios
municipios = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
#Salvar
saveRDS(municipios, file = "sipni_cobertura_municipios_1994_2023_2.rds")
codigo_municipio)
codigo_municipio)
# Combinar todos os dataframes em um único dataframe
populacao_municipios_2000_2022 <- bind_rows(resultados, .id = "ano") %>%
select(uf_abrev = uf,
nome_municipio_original = nome_munic,
ano, codigo_uf,
populacao,
codigo_municipio)
bind_rows(resultados, .id = "ano")
# Combinar todos os dataframes em um único dataframe
populacao_municipios_2000_2022 <- bind_rows(resultados, .id = "ano") %>%
select(uf_abrev = uf,
nome_municipio_original = nome_munic,
ano, codigo_uf,
populacao,
codigo_municipio = cod_municipio)
print(populacao_municipios_2000_2022)
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = "codigo_municipio")
municipios_2
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = join_by("codigo_municipio", ano))
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = join_by("codigo_municipio", "ano"))
sipni_cobertura_uf_1994_2023_2
sipni_cobertura_municipios_1994_2023_2
glimpse(sipni_cobertura_municipios_1994_2023_2)
RELATORIO_DTB_BRASIL_MUNICIPIO
sipni_cobertura_municipios_1994_2023_2
municipios_2
populacao_municipios_2000_2022
library(esquisser)
install.packages("esquisser")
library(esquisse)
install.packages("esquisse")
install.packages("esquisse")
esquisser(populacao_municipios_2000_2022)
esquisser(populacao_municipios_2000_2022 %>%
filter(nome_municipio_original == "Ribeirão Preto"))
View(populacao_municipios_2000_2022)
esquisser(populacao_municipios_2000_2022 %>%
filter(nome_municipio_original == "Ribeirão Preto"))
populacao_municipios_2000_2022 %>%
filter(nome_municipio_original == "Ribeirão Preto")
esquisser(populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao)) %>%
filter(nome_municipio_original == "Ribeirão Preto"))
populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao))
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao)) %>%
filter(nome_municipio_original == "Ribeirão Preto")
d1
esquisser(d1)
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao),
ano = as.numeric(ano)) %>%
filter(nome_municipio_original == "Ribeirão Preto")
esquisser(d1)
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5))
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao),
ano = as.numeric(ano)) %>%
filter(nome_municipio_original %in% c("Ribeirão Preto", "Sertãozinho"))
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5))
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original)
d1
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao),
ano = as.numeric(ano)) %>%
filter(nome_municipio_original %in% c("Ribeirão Preto", "Sertãozinho")
uf_abrev == "SP")
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao),
ano = as.numeric(ano)) %>%
filter(nome_municipio_original %in% c("Ribeirão Preto", "Sertãozinho"),
uf_abrev == "SP")
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original)
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original, scale = "free_y")
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original, scale = "free_y")
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = c("codigo_municipio", "ano"))
municipios
populacao_municipios_2000_2022
# Combinar todos os dataframes em um único dataframe
populacao_municipios_2000_2022 <- bind_rows(resultados, .id = "ano") %>%
select(uf_abrev = uf,
nome_municipio_original = nome_munic,
ano, codigo_uf,
populacao,
codigo_municipio = cod_municipio) %>%
mutate(ano = as.numeric(ano),
populacao = as.numeric(populacao))
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = c("codigo_municipio", "ano"))
municipios_2
print(populacao_municipios_2000_2022)
municipios
View(municipios)
print(populacao_municipios_2000_2022)
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = c("codigo_municipio", "ano"))
View(municipios_2)
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022 %>%
select(codigo_municipio, ano, populacao),
by = c("codigo_municipio", "ano"))
municipios_2
municipios_2 %>%
filter(ano > 2000)
municipios_2 %>%
filter(ano > 2000,
uf == "São Paulo")
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano)
df_ano <- df_ano %>%
mutate_all(as.character)  # Convertendo todas as colunas para character
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
# GDP ----
pib_municipios()
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano)
df_ano <- df_ano %>%
mutate_all(as.character)  # Convertendo todas as colunas para character
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano = ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
anos = 1999:2009
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
resultados
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
anos = 1999:2020
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
pib_municipios(ano = 2000)
pib_municipios(ano = 2003)
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano, dir=.)
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
df_ano <- pib_municipios(ano = ano, dir=here())
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano, dir=here())
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
here()
df_ano <- pib_municipios(ano = ano, dir=".")
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano, dir=".")
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
# Efetivo dos rebanhos por tipo de rebanho
df <- series_estatisticas_carrega("PPM01_BR_ABS")
df
# Docentes com curso superior no ensino médio, rede pública e privada
df <- series_estatisticas_carrega("SEE10_BR_PERC", transpose = T)
df
# Taxa de desocupação das pessoas de 10 anos ou mais de idade, por sexo - todas localidades
df <- series_estatisticas_carrega_todas_localidades("PE62_RM_PERC", transpose = T)
df
library(lodown) # [github::ajdamico/lodown] v0.1.0
install.packages("lodown")
remotes::install_github("ajdamico/lodown")
library(lodown) # [github::ajdamico/lodown] v0.1.0
catalog <- lodown::get_catalog(data_name = "censo", output_dir = "data") %>%
dplyr::filter(year == 2010, stringr::str_detect(state, "rs")) %>%
lodown::lodown(data_name = "censo")
# Arquivos baixados
fs::dir_tree(path = "data")
install.packages("basedosdados")
query <- bdplyr("br_ms_atencao_basica.municipio")
install.packages("bdplyr")
library("basedosdados")
# Para carregar o dado direto no R
query <- bdplyr("br_ibge_censo_demografico.microdados_domicilio_1970")
