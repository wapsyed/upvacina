ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5))
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original)
d1
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao),
ano = as.numeric(ano)) %>%
filter(nome_municipio_original %in% c("Ribeirão Preto", "Sertãozinho")
uf_abrev == "SP")
d1 = populacao_municipios_2000_2022 %>%
mutate(populacao = as.numeric(populacao),
ano = as.numeric(ano)) %>%
filter(nome_municipio_original %in% c("Ribeirão Preto", "Sertãozinho"),
uf_abrev == "SP")
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original)
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_classic() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original, scale = "free_y")
ggplot(d1) +
aes(x = ano, y = populacao, colour = nome_municipio_original) +
geom_line() +
scale_color_manual(values = c(`Ribeirão Preto` = "#F8766D")) +
labs(x = "x", y = "y", title = "Titulo", subtitle = "subtitulo") +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 21L, face = "bold", hjust = 0.5)) +
facet_wrap(~nome_municipio_original, scale = "free_y")
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = c("codigo_municipio", "ano"))
municipios
populacao_municipios_2000_2022
# Combinar todos os dataframes em um único dataframe
populacao_municipios_2000_2022 <- bind_rows(resultados, .id = "ano") %>%
select(uf_abrev = uf,
nome_municipio_original = nome_munic,
ano, codigo_uf,
populacao,
codigo_municipio = cod_municipio) %>%
mutate(ano = as.numeric(ano),
populacao = as.numeric(populacao))
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = c("codigo_municipio", "ano"))
municipios_2
print(populacao_municipios_2000_2022)
municipios
View(municipios)
print(populacao_municipios_2000_2022)
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022,
by = c("codigo_municipio", "ano"))
View(municipios_2)
municipios_2 = municipios %>%
left_join(populacao_municipios_2000_2022 %>%
select(codigo_municipio, ano, populacao),
by = c("codigo_municipio", "ano"))
municipios_2
municipios_2 %>%
filter(ano > 2000)
municipios_2 %>%
filter(ano > 2000,
uf == "São Paulo")
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano)
df_ano <- df_ano %>%
mutate_all(as.character)  # Convertendo todas as colunas para character
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
# GDP ----
pib_municipios()
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano)
df_ano <- df_ano %>%
mutate_all(as.character)  # Convertendo todas as colunas para character
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
resultados = list()
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
for (ano in anos) {
tryCatch({
# Chamar a função populacao_municipios para o ano atual e armazenar o resultado na lista
df_ano <- pib_municipios(ano = ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
# Tratar o erro (por exemplo, imprimir uma mensagem)
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
anos = 2000:2023
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
anos = 1999:2009
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[as.numeric(ano)]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
resultados
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
anos = 1999:2020
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano)
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
pib_municipios(ano = 2000)
pib_municipios(ano = 2003)
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano, dir=.)
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
df_ano <- pib_municipios(ano = ano, dir=here())
resultados = list()
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano, dir=here())
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
here()
df_ano <- pib_municipios(ano = ano, dir=".")
for (ano in anos) {
tryCatch({
df_ano <- pib_municipios(ano = ano, dir=".")
resultados[[ano]] <- df_ano
}, error = function(e) {
print(paste("Erro para o ano", ano, ":", conditionMessage(e)))
})
}
# Efetivo dos rebanhos por tipo de rebanho
df <- series_estatisticas_carrega("PPM01_BR_ABS")
df
# Docentes com curso superior no ensino médio, rede pública e privada
df <- series_estatisticas_carrega("SEE10_BR_PERC", transpose = T)
df
# Taxa de desocupação das pessoas de 10 anos ou mais de idade, por sexo - todas localidades
df <- series_estatisticas_carrega_todas_localidades("PE62_RM_PERC", transpose = T)
df
library(lodown) # [github::ajdamico/lodown] v0.1.0
install.packages("lodown")
remotes::install_github("ajdamico/lodown")
library(lodown) # [github::ajdamico/lodown] v0.1.0
catalog <- lodown::get_catalog(data_name = "censo", output_dir = "data") %>%
dplyr::filter(year == 2010, stringr::str_detect(state, "rs")) %>%
lodown::lodown(data_name = "censo")
# Arquivos baixados
fs::dir_tree(path = "data")
install.packages("basedosdados")
query <- bdplyr("br_ms_atencao_basica.municipio")
install.packages("bdplyr")
library("basedosdados")
# Para carregar o dado direto no R
query <- bdplyr("br_ibge_censo_demografico.microdados_domicilio_1970")
sipni_cobertura_uf_1994_2023_2 <- readRDS("~/Desktop/upvacina/sipni_cobertura_uf_1994_2023_2.rds")
sipni_cobertura_uf_1994_2023_2
sipni_cobertura_uf_1994_2023 <- readRDS("~/Desktop/upvacina/sipni_cobertura_uf_1994_2023.rds")
sipni_cobertura_uf_1994_2023
library(readr)
sipni_uf_mun_1994_2023 <- read_csv("dados_processados/sipni_uf_mun_1994_2023.csv")
View(sipni_uf_mun_1994_2023)
saveRDS(sipni_uf_mun_1994_2023, file = "sipni_uf_mun_1994_2023.rds")
sipni_uf_mun_1994_2023 <- readRDS("~/Desktop/upvacina/sipni_uf_mun_1994_2023.rds")
sipni_cobertura_uf_1994_2023 <- readRDS("~/Desktop/upvacina/sipni_cobertura_uf_1994_2023.rds")
sipni_cobertura_uf_1994_2023
write.csv(sipni_cobertura_uf_1994_2023, file = "sipni_cobertura_uf_1994_2023.csv", row.names = F)
sipni_cobertura_uf_1994_2023 %>% select(!"...1", !codigo)
library(tidyverse)
sipni_cobertura_uf_1994_2023 %>% select(!"...1", !codigo)
sipni_cobertura_uf_1994_2023
sipni_cobertura_uf_1994_2023
write.csv(sipni_cobertura_uf_1994_2023, file = "sipni_cobertura_uf_1994_2023.csv", row.names = F)
write.csv(sipni_cobertura_uf_1994_2023, file = "sipni_cobertura_uf_1994_2023.csv", row.names = F)
write.csv(sipni_cobertura_uf_1994_2023, file = "sipni_cobertura_uf_1994_2023.csv", row.names = F)
# install.packages("qqplotr")
# install.packages("writexl")
# devtools::install_github('Mikata-Project/ggthemr')
library(tidyverse)
library(here)
library(writexl)
library(readxl)
library(janitor)
library(stringi)
library(ggthemes)
library(esquisse)
library(ggthemr)
library(ggridges)
library(grDevices)
library(plotly)
library(gghighlight)
library(ggsci)
library(patchwork)
library(qqplotr)
arquivos_xlsx <- list.files(here("dados_brutos", "SIPNI Cobertura Municipios"), pattern = "\\.xlsx$", full.names = F)
arquivos_xlsx
here("dados_brutos", "SIPNI Cobertura Municipios")
#Criar função
read_xl_sipni_municipio <- function(arquivo) {
dados <- read_excel(arquivo, skip = 4, col_names = FALSE) %>%
setNames(.[1, ]) %>%
slice(-1:-4) %>%
mutate(across(-1, as.numeric)) %>%
pivot_longer(cols = -c(1),
names_to = "imuno",
values_to = "cobertura") %>%
mutate(arquivo = basename(arquivo)) %>%
janitor::clean_names() %>%
mutate(cobertura = round(cobertura, 2),
ano = as.numeric(gsub(".*_(\\d{4})\\.xlsx", "\\1", arquivo))) %>%
filter(!is.na(municipio),
!grepl("Gerado", municipio)) %>%
select(municipio, ano, imuno, cobertura) %>%
group_by(municipio, ano, imuno)
return(dados)
}
#Unir dados
sipni_cobertura_municipios_1994_2023 <- lapply(arquivos_xlsx, read_xl_sipni_municipio) %>%
bind_rows()
arquivos_xlsx
#Listar tabelas
arquivos_xlsx <- list.files(here("dados_brutos", "SIPNI Cobertura Municipios"), pattern = "\\.xlsx$", full.names = T)
#Criar função
read_xl_sipni_municipio <- function(arquivo) {
dados <- read_excel(arquivo, skip = 4, col_names = FALSE) %>%
setNames(.[1, ]) %>%
slice(-1:-4) %>%
mutate(across(-1, as.numeric)) %>%
pivot_longer(cols = -c(1),
names_to = "imuno",
values_to = "cobertura") %>%
mutate(arquivo = basename(arquivo)) %>%
janitor::clean_names() %>%
mutate(cobertura = round(cobertura, 2),
ano = as.numeric(gsub(".*_(\\d{4})\\.xlsx", "\\1", arquivo))) %>%
filter(!is.na(municipio),
!grepl("Gerado", municipio)) %>%
select(municipio, ano, imuno, cobertura) %>%
group_by(municipio, ano, imuno)
return(dados)
}
#Unir dados
sipni_cobertura_municipios_1994_2023 <- lapply(arquivos_xlsx, read_xl_sipni_municipio) %>%
bind_rows()
#Unir dados
sipni_cobertura_municipios_1994_2023 <- lapply(arquivos_xlsx, read_xl_sipni_municipio) %>%
bind_rows()
sipni_cobertura_municipios_1994_2023
sipni_cobertura_uf_1994_2023
sipni_cobertura_municipios_1994_2023
sipni_cobertura_municipios_1994_2023 %>%
filter(str_detect(municipio, "SAO VICENTE"))
sipni_cobertura_municipios_1994_2023 %>%
View()
sipni_cobertura_municipios_1994_2023 %>%
filter(ano == "1994")
sipni_cobertura_municipios_1994_2023 %>%
filter(ano == "1994",
imuno == "BCG")
sipni_cobertura_municipios_1994_2023 %>%
filter(ano == 1994,
imuno == "BCG")
sipni_cobertura_municipios_1994_2023 %>%
filter(ano == 1994,
imuno == "BCG") %>%
View()
#Salvar
saveRDS(sipni_cobertura_municipios_1994_2023,
file = "sipni_cobertura_municipios_1994_2023.rds")
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" ) %>%
select(!"...1":municipio)
sipni_cobertura_municipios_1994_2023
sipni_cobertura_municipios_1994_2023 %>%
separate(municipio, c(codigo, nome))
sipni_cobertura_municipios_1994_2023
sipni_cobertura_municipios_1994_2023 %>%
separate(municipio, c("codigo", "nome"), sep = " ")
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" ) %>%
select(!"...1":municipio)
sipni_cobertura_municipios_1994_2023
#Municípios
sipni_cobertura_municipios_1994_2023_2 = sipni_cobertura_municipios_1994_2023 %>%
mutate(codigo = as.character(str_extract(municipio, "\\d+")),# Extrair números
nome = str_remove(municipio, "\\d+ "),# Extrair texto
mun_uf = "Município" )
sipni_cobertura_municipios_1994_2023_2
glimpse(sipni_cobertura_municipios_1994_2023_2)
sipni_cobertura_municipios_1994_2023_2
RELATORIO_DTB_BRASIL_MUNICIPIO <- read_excel("dados_brutos/DTB_2022_codigomunicipios/RELATORIO_DTB_BRASIL_MUNICIPIO.xls",
skip = 4)
dtb_municipios_cod = RELATORIO_DTB_BRASIL_MUNICIPIO %>%
clean_names() %>%
select(codigo_uf = uf, uf = nome_uf, codigo = codigo_municipio_completo, nome_municipio) %>%
mutate(nome_municipio_original = nome_municipio,
nome =  toupper(nome_municipio_original),
nome = stri_trans_general(nome, "Latin-ASCII")) %>%
select(-nome_municipio)
municipios = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = "nome") %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
municipios
#Salvar
saveRDS(municipios, file = here("dados_processados", "sipni_cobertura_municipios_1994_2023_2.rds") )
#Salvar
saveRDS(municipios, file = here("dados_processados", "sipni_cobertura_municipios_1994_2023.rds") )
sipni_cobertura_municipios_1994_2023 <- readRDS("~/Desktop/upvacina/dados_processados/sipni_cobertura_municipios_1994_2023.rds")
municipios %>%
filter(nome_municipio_original == "São Vicente")
municipios %>%
filter(nome_municipio_original == "São Vicente",
uf == "São Paulo",
imuno == "BCG")
dtb_municipios_cod
dtb_municipios_cod
sipni_cobertura_municipios_1994_2023_2
municipios = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = join_by("nome", "codigo")) %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo.y, ano, imuno, cobertura, codigo_uf, mun_uf)
sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = join_by("nome", "codigo"))
municipios = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod, by = join_by("nome", "codigo")) %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo, ano, imuno, cobertura, codigo_uf, mun_uf)
municipios %>%
filter(nome_municipio_original == "São Vicente",
uf == "São Paulo",
imuno == "BCG")
municipios
municipios
sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome))
dtb_municipios_cod
municipios_nomes = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod %>%
select(nome, nome_municipio_original), by = "nome")
dtb_municipios_cod
municipios_nomes
dtb_municipios_cod
municipios_nomes
municipios_nomes
municipios_nomes
dtb_municipios_cod
municipios_nomes
municipios_nomes %>%
filter(nome_municipio_original == "São Vicente",
uf == "São Paulo",
imuno == "BCG")
municipios_nomes
municipios_nomes %>%
filter(nome_municipio_original == "São Vicente",
# uf == "São Paulo",
imuno == "BCG")
municipios_nomes %>%
filter(nome_municipio_original == "São Vicente",
# uf == "São Paulo",
imuno == "BCG")
dtb_municipios_cod
municipios_nomes = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6)) %>%
select(nome, nome_municipio_original), by = "nome")
municipios_nomes
municipios_nomes %>%
filter(nome_municipio_original == "São Vicente",
# uf == "São Paulo",
imuno == "BCG")
dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6))
sipni_cobertura_municipios_1994_2023_2
dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6))
#Anotações de cidades. Fonte: IBGE. https://www.ibge.gov.br/explica/codigos-dos-municipios.php
RELATORIO_DTB_BRASIL_MUNICIPIO <- read_excel("dados_brutos/DTB_2022_codigomunicipios/RELATORIO_DTB_BRASIL_MUNICIPIO.xls",
skip = 4)
dtb_municipios_cod = RELATORIO_DTB_BRASIL_MUNICIPIO %>%
clean_names() %>%
select(codigo_uf = uf, uf = nome_uf, codigo = codigo_municipio_completo, nome_municipio) %>%
mutate(nome_municipio_original = nome_municipio,
nome =  toupper(nome_municipio_original),
nome = stri_trans_general(nome, "Latin-ASCII")) %>%
select(-nome_municipio)
municipios_nomes = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6)),
by = join_by("nome", "codigo"))
municipios_nomes = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6)),
by = join_by("nome", "codigo")) %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo, ano, imuno, cobertura, codigo_uf, mun_uf)
municipios_nomes
municipios_nomes %>%
filter(nome_municipio_original == "São Vicente",
# uf == "São Paulo",
imuno == "BCG")
municipios_nomes = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6)),
by = join_by("nome", "codigo")) %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo, ano, imuno, cobertura, codigo_uf, mun_uf) %>%
distinct()
municipios_nomes = sipni_cobertura_municipios_1994_2023_2 %>%
mutate(nome = gsub("\\\\", "", nome)) %>%
left_join(dtb_municipios_cod %>%
mutate(codigo = str_sub(codigo, 1, 6)),
by = join_by("nome", "codigo")) %>%
select(nome, nome_municipio_original, uf, codigo_municipio = codigo, ano, imuno, cobertura, codigo_uf, mun_uf) %>%
distinct()
#Salvar
saveRDS(municipios, file = here("dados_processados", "sipni_cobertura_municipios_1994_2023.rds") )
municipios_nomes %>%
filter(nome_municipio_original == "São Vicente",
# uf == "São Paulo",
imuno == "BCG")
